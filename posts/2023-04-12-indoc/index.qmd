---
title: "Education or Indoctrination?"
author: "[Sanghoon Park](https://sanghoon-park.com/)"
date: today
date-format: long
categories:
  - Autocracy
  - Democracy
  - Patent
  - Technology
  - Education
  - Indoctrination
image: tech.png
image-alt: "A centry's shift from engines toward ICT innovations"
---

```{r}
#| echo: false
#| out-width: "95%"
knitr::include_graphics("tech.png")
```

The basic idea of this paper comes from the paper published in *American
Political Science Review* in 2022, [Education or Indoctrination? The Violent
Origins of Public School Systems in an Era of
State-Building](https://doi.org/10.1017/S0003055422000247). Paglayan (2022)
argues that states, in particular non-democracies, experienced mass violence,
such as civil war, are more likely to install educational system for the
children to enhance their compliance to the regime. Thus, the study examines the
relationship between regime type, civil war experience, and education expansion
in Latin America.

However, there are several points in Paglayan (2022) that are unresolved or
unclear. First, do authoritarian regimes use indoctrination to protect children
from potential mass violations following civil war? So, what are the criteria
for determining the target of indoctrination? How do autocracies use
indoctrination strategically to achieve their goals? Second, is school
enrollment a good indicator of indoctrination?

Although the article contains insightful arguments, my question focuses on
education and indoctrination. Is it true that they are mutually exclusive?
Autocrats can use education to increase compliance by extending it to their
children. However, it can also provide an opportunity for children to grow in
their own abilities. Thus, I believe that what distinguishes education from
indoctrination is determined on the demand side rather than the supply side. If
the system's beneficiaries (or indoctrinated) children have developed their
capability, driving the country forward, even indoctrination strategy works as
an education.

Thus, I conceptualize indoctrination and education as follows:

**Education**: *a process of facilitating learning and the development of
skills, knowledge, critical thinking, and personal growth.*

**Indoctrination**: *a method by which individuals or groups are taught to
accept a set of beliefs uncritically, often for the purpose of promoting a
specific agenda or maintaining control.*

# Theoretical Expectation

Education and indoctrination, I contend, are not mutually exclusive. The
outcomes of the strategy are what justify education or indoctrination. For
example, if the goal of an indoctrination strategy is to improve students
compliance, it is less likely to provide diverse content and curriculum to
improve students' creativity. Otherwise, if such benefits are provided, even
indoctrination will encourage students to have highly professionalized and
developed skills, and technologies, which can have an productive impact on the
entire regime.

Therefore, here, I expect the relationship between level of indoctrination,
education expenditure, economic development, and intellectual property of the
state, which cannot be obtained without well-designed education. Below are
rougly drawed testable hypotheses.

*Hypothesis 1*: Higher indoctrination leads to less advanced technological
developments than higher education because indoctrination emphasizes increasing
citizens' compliance with the regime.

*Hypothesis 2a*: Indoctrination increases low-level technological developments
while decreasing high-level technological developments.

*Hypothesis 2b*: Indoctrination increases technological developments, but
decreases diversity of technological developments.

*Hypothesis 3*: The effect of indoctrination on technological developments is
conditional on the economic capacity of a state.

# Preliminary Exploration

## Intellectual property

To measure the intellectual property, I use the country-year patent data from
1995 to 2023 from [World Intellectual Property
Organization](https://www3.wipo.int/ipstats/). What I use is the patent
publication data, which are measured as total count by applicant's origin by
technology.

```{r}
#| include: false
knitr::opts_chunk$set(message = F, warning = F, error = F)
```

```{r}
library(estimatr);library(geomtextpath); library(tidyverse)
theme_set(theme_bw())

patent <- rio::import("INPACT-S.dta")
vindoc_cy_full <- readRDS("data/vindoc_cy_full.rds")
vdem <- vdemdata::vdem
qog <- rqog::read_qog("standard", "time-series", year = 2023)
```

I created COW country codes. Then, I made two different set of data frame. The
first data frame shows the number of patents based on country-year unit
(`patent_number`). The second data frame calculates the number of patents by
country-year-section unit (`patent_diverse`).

```{r}
#| code-fold: true
#| code-summary: "Show the code"
patent |> 
  mutate(COWcode = 
           countrycode::countrycode(appln_auth_iso3, "iso3c", "cown")) ->
  patent

patent |> 
  group_by(appln_auth_iso3, appln_filing_year) |> 
  summarize(patent_n = n()) |> ungroup() -> 
  patent_number

patent |> 
  group_by(appln_auth_iso3, appln_filing_year, isic_rev3_2) |> 
  count() |> 
  mutate(isic_rev3_2_fct = 
           factor(isic_rev3_2,
                  levels = c(sort(unique(patent$isic_rev3_2))))) -> 
  patent_diverse

patent_diverse |> 
  ungroup() -> patent_diverse

head(patent_diverse)
```

Also, I coded a function to transform a categorical variable into multiple
dummies: `create_dummies().`

```{r}
create_dummies <- function(df, a_factor) {
  
  if (!is.data.frame(df) | !is_tibble(df)) stop('first arg must be data.frame')
  
  new_df <- df
  new_df <- new_df[ , a_factor] %>%
    select(my_factor = 1)
  
  if (!is.factor(new_df$my_factor)) stop('second arg must be a factor')
  
  factor_levels <- levels(new_df$my_factor)
  
  for (i in 1:length(factor_levels)) {
    var <- new_df$my_factor == factor_levels[i]
    new_df[[paste0(factor_levels[i], '_', i)]] <- var
  }
  
  new_df <- new_df %>% select(-my_factor) %>%
    mutate_all(as.integer)
  df <- bind_cols(df, new_df)
  
  return(df)
}
```

By applying the function to the `patent_diverse` data frame, I was able to
generate a large data frame that shows whether a country had patents in specific
industrial categories in a given year.

```{r}
#| code-fold: true
#| code-summary: "Show the code"
create_dummies(patent_diverse, "isic_rev3_2_fct") -> patent_diverse_wide

head(patent_diverse_wide);names(patent_diverse_wide)
```

Next, I created a variable called `diverse` that takes the sum of dummy
variables representing industrial section codes. `diverse` will show whether a
patent belongs to which section of industry in a countryÂ in a given year. I
aggregated the data frame at the country-year level to show how many sections a
country's patents cover in a given year. The `diverse` variable ranges between 0
and 36.

```{r}
#| code-fold: true
#| code-summary: "Show the code"
patent_diverse_wide |> 
  rowwise() |>  
  mutate(diverse = sum(c_across(6:36))) |> 
  dplyr::select(c(1, 2, 3, 5, 37)) |> 
  ungroup() -> patent_diverse_short

patent_diverse_short |> 
  group_by(appln_auth_iso3, appln_filing_year) |> 
  summarize(diverse = length(isic_rev3_2_fct)) -> patent_diverse_sum

patent_number |> 
  drop_na(appln_auth_iso3, appln_filing_year) |> 
  left_join(patent_diverse_sum |> drop_na(appln_auth_iso3, appln_filing_year), 
            by = c("appln_auth_iso3", "appln_filing_year")) ->
  patent_diverse_number

head(patent_diverse_number)
```

## Indoctrination

I merge the sample with other data sets from `V-Indoc` and `V-Dem` to include
variables on indoctrination for the analyses.

-   From `V-Indoc` data set, I select five variables to capture `indoctrination`
    for a preliminary analysis.

    -   `v2xed_ed_inpt`: Indoctrination potential in education. The potential of
        regimes to successfully indoctrinate through education is based on their
        control over the structures and processes of the education system. The
        index is a function of the coherence of the regime's doctrine (whether
        it be democratic or autocratic) and the effort devoted to political
        education. Greater coherence and political education efforts are
        expected to generate higher potential for indoctrination. `V-Indoc`
        estimates the index by averaging two indices: `v2xed_ed_poed` and
        `v2xed_ed_inco`.

    -   `v2xed_ed_poed`: Political education effort in education. This index
        measures the extent to which the regime attempts to teach its core
        political values and ideologies through education based on political
        education in primary and secondary schools, and the teaching of a
        dominant ideology in the history curriculum.

        -   `V-Indoc` estimates this index by taking the point estimates from a
            Bayesian factor analysis model of the indicators: `v2edpoledprim`,
            `v2edpoledsec`, and `v2edideol.`

        -   `v2edpoledprim`: Political education, primary school

        -   `v2edpoledsec`: Political education, secondary school

        -   `v2edideol`: Ideology in the curriculum

    -   `v2xed_ed_inco`: Indoctrination coherence in education. This index
        measures the extent to which a coherent single doctrine of political
        values and model citizenship is known and promoted by educational
        agents. The index is a function of the centralization of the education
        system and the regime's control over educational agents. Greater
        centralization and control are expected to lead to a more coherent
        doctrine being taught through education.

        -   `V-Indoc` estimates the index by averaging two indices:
            `v2xed_ed_cent` and `v2xed_ed_ctag.`

        -   `v2xed_ed_cent`: Centralization of the education system. This index
            measures the extent to which the regime has control over education
            structures and resources based on the centralization of the
            curriculum and textbooks.

        -   `V-Indoc` estimates the index by averaging two indicators:
            `v2edcentcurrlm` and `v2edcenttxbooks.`

            -   `v2edcentcurrlm`: Centralized curriculum. The official
                curriculum may only be a framework, to which individual schools
                can contribute. For this question, we are interested in all
                school subjects across levels of primary and secondary public
                education. If there are substantive differences between the
                primary and secondary education levels, please provide the
                response that is most accurate for the majority of schools. A
                national (or federal) authority can include a state body
                organized under the auspices of a Ministry of Education. The
                sub-national level includes states, provinces, districts,
                municipalities, villages, local educational authorities, etc.

            -   `v2edcenttxbooks`: Centralized textbook approval. For this
                question, we are interested in core subjects, such as languages,
                mathematics, science, arts, social studies, history, geography.
                We are not interested in textbooks teaching foreign languages
                that could be subcontracted to a foreign publisher. Please
                consider school subjects across levels of formal primary and
                secondary public education. If there are substantive differences
                between the primary and secondary education levels, please
                provide the response that is most accurate for the majority of
                schools. Examples of ways in which textbook production is
                centrally approved or authorized include: a national public
                authority reviews textbook content and approves textbooks for
                use in schools; there is a state-mandated national list of
                textbooks that schools are recommended to use; the Ministry of
                Education directly publishes textbooks. A national (or federal)
                authority can include a public authority organized under the
                auspices of a Ministry of Education or a different authority.

        -   `v2xed_ed_ctag`: Control over educational agents. This index
            measures the extent to which the regime is able to control teachers
            and teaching practices inside the classroom based on the strength of
            teacher autonomy and unions, and the hiring/firing of teachers.

        -   Etimates the index by taking the point estimates from a Bayesian
            factor analysis model of the indicators: `v2edteautonomy`,
            `v2edteunionindp`, `v2edtehire`, and `v2edtefire.`

            -   `v2edteautonomy`: Teacher autonomy in the classroom

            -   `v2edteunionindp`: Independent teacher unions

            -   `v2edtehire`: Political teacher hiring

            -   `v2edtefire`: Political teacher firing

    -   `v2edmath`: What proportion of instructional weekly hours is dedicated
        to mathematics and natural sciences in primary education? For this
        question, please approximate the proportion of instructional hours
        across grades of primary education. Mathematics includes arithmetic,
        geometry, algebra, calculus. Natural sciences include chemistry,
        biology, physics, as well as classes in computing and engineering.

I think `v2xed_ed_inco` is a more relevant measurement to capture the
relationship between indoctrination, economic and intellectual property
development in theory. I would like to look into `v2xed_ed_inco` and its
sub-indicators because I expect that indoctrination is more likely to enhance
compliance and less likely to improve diversity or individual capability.

## Other Covariates

### Political and Economic Factors

I use `V-Dem` data set to include various political and economic variables.

-   `v2x_polyarchy`: Electoral democracy index. The electoral principle of
    democracy seeks to embody the core value of making rulers responsive to
    citizens, achieved through electoral competition for the electorate's
    approval under circumstances when suffrage is extensive; political and civil
    society organizations can operate freely; elections are clean and not marred
    by fraud or systematic irregularities; and elections affect the composition
    of the chief executive of the country. In between elections, there is
    freedom of expression and an independent media capable of presenting
    alternative views on matters of political relevance. In the V-Dem conceptual
    scheme, electoral democracy is understood as an essential element of any
    other conception of representative democracy --- liberal, participatory,
    deliberative, egalitarian, or some other.

-   `v2x_libdem`: Liberal democracy index. The liberal principle of democracy
    emphasizes the importance of protecting individual and minority rights
    against the tyranny of the state and the tyranny of the majority. The
    liberal model takes a "negative" view of political power insofar as it
    judges the quality of democracy by the limits placed on government. This is
    achieved by constitutionally protected civil liberties, strong rule of law,
    an independent judiciary, and effective checks and balances that, together,
    limit the exercise of executive power. To make this a measure of liberal
    democracy, the index also takes the level of electoral democracy into
    account.

-   `e_boix_regime`: Democracy (BMR). Dichotomous democracy measure based on
    contestation and participation. Countries coded democratic have (1)
    political leaders that are chosen through free and fair elections and (2) a
    minimal level of suffrage.

-   `e_gdppc`: GDP per capita. Point estimate from latent variable model of
    Gross Domestic Product Per Capita based on a number of sources.

-   `e_gdp`: GDP. Point estimate from latent variable model of Gross Domestic
    Product based on a number of sources.

### Socio-Demogratic and Educational Factors

-   `e_pop`: Population.

-   `e_total_resources_income_pc`: Petroleum, coal, natural gas, and metals
    production per capita. Real value of petroleum, coal, natural gas, and
    metals produced per capita.

-   `v2peprisch`: Primary school enrollment

-   `v2pesecsch`: Secondary school enrollment

-   `v2petersch`: Tertiary school enrollment

```{r}
#| code-fold: true
#| code-summary: "Show the code"
vdem |> 
  mutate(iso3 = countrycode::countrycode(country_name, "country.name", "iso3c")) ->
  vdem

vdem |> drop_na(iso3) |> left_join(
  vindoc_cy_full |> 
    mutate(iso3 = countrycode::countrycode(country_name, "country.name", "iso3c")) |> 
    dplyr::select(iso3, year, 
                  contains("v2xed_ed_inpt"), contains("v2xed_ed_poed"), 
                  contains("v2xed_ed_inco"),contains("v2xed_ed_con"),
                  contains("v2edpoledprim"),contains("v2edpoledsec"), 
                  contains("v2edideol"), contains("v2xed_ed_cent"), 
                  contains("v2xed_ed_ctag"), contains("v2edcentcurrlm"),
                  contains("v2edcenttxbooks"), contains("v2edteautonomy"), 
                  contains("v2edteunionindp"), contains("v2edtehire"), 
                  contains("v2edtefire"), contains("v2edmath")) |>
    drop_na(iso3), 
  by = c("iso3", "year")
) -> vdem_indoc
```

```{r}
#| code-fold: true
#| code-summary: "Show the code"
vdem_indoc |> 
  left_join(patent_diverse_number, 
            by = c("iso3" = "appln_auth_iso3", 
                   "year" = "appln_filing_year")) ->
  vdem_patent

library(rqog)
qog <- read_qog(which_data = "standard", data_type = "time-series")

qog |> 
  dplyr::select(ccodealp, year, wdi_fdiin, wdi_expstup, 
                wdi_expstus, wdi_expstut) -> subqog

vdem_patent |> left_join(
  subqog |> drop_na(ccodealp, year),
  by = c("iso3" = "ccodealp", "year")
) -> vdem_patent
```

### Trends in Technology Patents in Numbers

```{r}
#| eval: true
#| code-fold: true
#| code-summary: "Show the code"
#| message: false
#| warning: false
#| error: false
#| layout-ncol: 1
#| fig-cap: "Number of the patent by regime (yearly)"
#| fig-subcap: 
#|   - "All countries"
#|   - "Without China and Russia"

### All countries
vdem_patent |> 
  group_by(e_boix_regime, year) |> 
  summarize(mean = mean(patent_n, na.rm = T)) |> dplyr::filter(year > 1979) |> 
  mutate(regime = factor(
    e_boix_regime, levels = c(0, 1),
    labels = c("Autocracy", "Democracy")
  )) ->
  sum_regime_patent

end_patent_n <- sum_regime_patent |> 
  drop_na(mean, regime) |> 
  dplyr::filter(year == max(year, na.rm = T))

sum_regime_patent |> drop_na() |> 
  mutate(regime = factor(
    e_boix_regime, levels = c(0, 1),
    labels = c("Autocracy", "Democracy")  
    )) |> 
  ggplot(aes(x = year, y = mean, color = regime, group = regime)) +
  geom_line(show.legend = F) + 
  ggrepel::geom_label_repel(
    data = end_patent_n,
    aes(label = regime, x = year, y = mean), show.legend = F) +
  geom_point(shape = 21, fill = "white", show.legend = F) +
  scale_x_continuous(breaks = c(seq(1980, 2020, 2))) +
  scale_y_continuous(breaks = c(seq(0, 1600, 100)), limits = c(0, 550)) +
  theme_bw()

### Without Russia and China

vdem_patent |> dplyr::filter(!COWcode %in% c(365, 710)) |> 
  group_by(e_boix_regime, year) |> 
  summarize(mean = mean(patent_n, na.rm = T)) |> dplyr::filter(year > 1979) |> 
  mutate(regime = factor(
    e_boix_regime, levels = c(0, 1),
    labels = c("Autocracy", "Democracy")
  )) ->
  sum_regime_patent_nochrs

end_patent_n_nochrs <- sum_regime_patent_nochrs |> 
  drop_na(mean, regime) |> 
  dplyr::filter(year == max(year, na.rm = T))

sum_regime_patent_nochrs |> drop_na() |> 
  mutate(regime = factor(
    e_boix_regime, levels = c(0, 1),
    labels = c("Autocracy", "Democracy")  
    )) |> 
  ggplot(aes(x = year, y = mean, color = regime, group = regime)) +
  geom_line(show.legend = F) + 
  ggrepel::geom_label_repel(
    data = end_patent_n_nochrs,
    aes(label = regime, x = year, y = mean), show.legend = F) +
  geom_point(shape = 21, fill = "white", show.legend = F) +
  scale_x_continuous(breaks = c(seq(1980, 2020, 2))) +
  scale_y_continuous(breaks = c(seq(0, 1600, 100)), limits = c(0, 550)) +
  theme_bw()
```

### Trends in Technology Patents in Diversity

```{r}
#| eval: true
#| code-fold: true
#| code-summary: "Show the code"
#| message: false
#| warning: false
#| error: false
#| layout-ncol: 2
#| fig-cap: "Diversity of the patent by regime (yearly)"
#| fig-subcap: 
#|   - "All countries"
#|   - "Without China and Russia"

### All countries
vdem_patent |> 
  group_by(e_boix_regime, year) |> 
  summarize(mean = mean(diverse, na.rm = T)) |> dplyr::filter(year > 1979) |> 
  mutate(regime = factor(
    e_boix_regime, levels = c(0, 1),
    labels = c("Autocracy", "Democracy")
  ))->
  sum_regime_diverse

end_diverse_n <- sum_regime_diverse |> 
  drop_na(mean, regime) |> 
  dplyr::filter(year == max(year, na.rm = T))

sum_regime_diverse |> drop_na() |> 
  mutate(regime = factor(
    e_boix_regime, levels = c(0, 1),
    labels = c("Autocracy", "Democracy")
  )) |> 
  ggplot(aes(x = year, y = mean, color = regime, group = regime)) +
  geom_line(show.legend = F) + 
  ggrepel::geom_label_repel(
    data = end_diverse_n,
    aes(label = regime, x = year, y = mean), show.legend = F) +
  geom_point(shape = 21, fill = "white", show.legend = F) +
  scale_x_continuous(breaks = c(seq(1980, 2020, 2))) +
  scale_y_continuous(breaks = c(seq(0, 36, 2)), limits = c(20, 30)) +
  theme_bw()

### Without China and Russia
vdem_patent |> dplyr::filter(!COWcode %in% c(365, 710)) |> 
  group_by(e_boix_regime, year) |> 
  summarize(mean = mean(diverse, na.rm = T)) |> dplyr::filter(year > 1979) |> 
  mutate(regime = factor(
    e_boix_regime, levels = c(0, 1),
    labels = c("Autocracy", "Democracy")
  ))->
  sum_regime_diverse_nochrs


end_diverse_n_nochrs <- sum_regime_diverse_nochrs |> 
  drop_na(mean, regime) |> 
  dplyr::filter(year == max(year, na.rm = T))

sum_regime_diverse_nochrs |> drop_na() |> 
  mutate(regime = factor(
    e_boix_regime, levels = c(0, 1),
    labels = c("Autocracy", "Democracy")
  )) |> 
  ggplot(aes(x = year, y = mean, color = regime, group = regime)) +
  geom_line(show.legend = F) + 
  ggrepel::geom_label_repel(
    data = end_diverse_n_nochrs,
    aes(label = regime, x = year, y = mean), show.legend = F) +
  geom_point(shape = 21, fill = "white", show.legend = F) +
  scale_x_continuous(breaks = c(seq(1980, 2020, 2))) +
  scale_y_continuous(breaks = c(seq(0, 36, 2)), limits = c(20, 30)) +
  theme_bw()
```

The patent number and diversity show similar patterns:

1.  Democracy, on average, has greater number and diversity in patents than
    autocracy.
2.  The variations in patent number and diversity of autocracy are much greater
    than democracy.
    -   Some autocracies yield greater extent of patent number and diversity
        than democracies.

### Distribution of Dependent Variable

```{r}
#| eval: true
#| code-fold: true
#| code-summary: "Show the code"
#| message: false
#| warning: false
#| error: false
#| layout-ncol: 1
#| fig-cap: "Distribution of the patent by regime (yearly)"
#| fig-subcap: 
#|   - "Number of patent"
#|   - "Diversity of patent"
vdem_patent |> 
  mutate(
    regime = if_else(e_boix_regime == 1L, "Democracy",
                     if_else(e_boix_regime == 0L, "Autocracy", NA_character_)),
    regime = factor(regime,
                    levels = c("Autocracy", "Democracy"))) -> vdem_patent
vdem_patent |>   
  drop_na(regime) |> 
  ggplot(aes(x = year, y = log(patent_n+1), group = year, color = regime)) +
  geom_boxplot(show.legend = F) + facet_wrap(~regime)

vdem_patent |>   
  drop_na(regime) |> 
  ggplot(aes(x = year, y = diverse, group = year, color = regime)) +
  geom_boxplot(show.legend = F) + facet_wrap(~regime)
```

```{r}
#| eval: true
#| code-fold: true
#| code-summary: "Show the code"
#| message: false
#| warning: false
#| error: false
#| layout-ncol: 1
#| fig-cap: "Distribution of the patent by regime (overall)"
#| fig-subcap: 
#|   - "All countries"
#|   - "Without China and Russia"

vdem_patent |>   
  drop_na(regime) |> dplyr::select(regime, patent_n, diverse, year) |> 
  mutate(lnpatent_n = log(patent_n + 1)) |> 
  tidyr::pivot_longer(
    cols = c("lnpatent_n", "diverse"),
    names_to = "patent_type",
    values_to = "value"
  ) |> dplyr::filter(year > 1979) |> 
  mutate(patent_type = 
           factor(patent_type, 
                  levels = c("lnpatent_n", "diverse"),
                  labels = c("Patent Number", "Patent Diversity"))) |> 
  ggplot(aes(x = value, fill = regime)) +
  geom_density(alpha = 0.7)  +
  facet_wrap(~patent_type, scales = "free", ncol = 1) +
  theme(legend.position = "top")

vdem_patent |>  dplyr::filter(!COWcode %in% c(365, 710)) |> 
  drop_na(regime) |> dplyr::select(regime, patent_n, diverse, year) |> 
  mutate(lnpatent_n = log(patent_n + 1)) |> 
  tidyr::pivot_longer(
    cols = c("lnpatent_n", "diverse"),
    names_to = "patent_type",
    values_to = "value"
  ) |> dplyr::filter(year > 1979) |> 
  mutate(patent_type = 
           factor(patent_type, 
                  levels = c("lnpatent_n", "diverse"),
                  labels = c("Patent Number", "Patent Diversity"))) |> 
  ggplot(aes(x = value, fill = regime)) +
  geom_density(alpha = 0.7)  +
  facet_wrap(~patent_type, scales = "free", ncol = 1) +
  theme(legend.position = "top", legend.title = element_blank())

```

### Key Predictor

#### Logged number of patents and centralized curriculum (`v2edcentcurrlm`)

```{r}
#| eval: true
#| code-fold: true
#| code-summary: "Show the code"
#| message: false
#| warning: false
#| error: false
#| layout-ncol: 1
#| fig-cap: "Bivariate relationship between logged number of patents and centralized curriculum by countries and regimes"
#| fig-subcap: 
#|   - "Democracy"
#|   - "Autocracy"

vdem_patent |> 
  mutate(iso3 = factor(iso3),
         year_fa = factor(year),
         year = as.numeric(as.character(year)),
         lnpatent = log(patent_n+1)) -> vdem_patent

vdem_patent |> ungroup() |> dplyr::filter(year > "1979") |> 
  drop_na(year, v2edcentcurrlm.x, regime, lnpatent) |> 
  dplyr::filter(regime %in% "Democracy") |> 
  ggplot(aes(x = v2edcentcurrlm.x, y = lnpatent)) + 
  geom_smooth(method = "lm", se = F, color = futurevisions::futurevisions("mars")[3]) + 
  geom_point(shape = 21, size = 1, fill = futurevisions::futurevisions("mars")[3]) +
  labs(x = "Centralized curriculum", 
       y = "Logged number of patents") +
  facet_wrap(~iso3)

vdem_patent |> ungroup() |> dplyr::filter(year > "1979") |> 
  drop_na(year, v2edcentcurrlm.x, regime, lnpatent) |> 
  dplyr::filter(regime %in% "Autocracy") |> 
  ggplot(aes(x = v2edcentcurrlm.x, y = lnpatent)) + 
  geom_smooth(method = "lm", se = F, color = futurevisions::futurevisions("mars")[1]) + 
  geom_point(shape = 21, size = 1, fill = futurevisions::futurevisions("mars")[1]) +
  labs(x = "Centralized curriculum", 
       y = "Diversity of patents") +
  facet_wrap(~iso3)

```

#### Diversity of patents and centralized curriculum (`v2edcentcurrlm`)

```{r}
#| eval: true
#| code-fold: true
#| code-summary: "Show the code"
#| message: false
#| warning: false
#| error: false
#| layout-ncol: 1
#| fig-cap: "Bivariate relationship between diversity of patents and centralized curriculum by countries and regimes"
#| fig-subcap: 
#|   - "Democracy"
#|   - "Autocracy"

vdem_patent |> ungroup() |> dplyr::filter(year > "1979") |> 
  drop_na(year, v2edcentcurrlm.x, regime, diverse) |> 
  dplyr::filter(regime %in% "Democracy") |> 
  ggplot(aes(x = v2edcentcurrlm.x, y = diverse)) + 
  geom_smooth(method = "lm", se = F, color = futurevisions::futurevisions("mars")[3]) + 
  geom_point(shape = 21, size = 1, fill = futurevisions::futurevisions("mars")[3]) +
  labs(x = "Centralized curriculum", 
       y = "Logged number of patents") +
  facet_wrap(~iso3)

vdem_patent |> ungroup() |> dplyr::filter(year > "1979") |> 
  drop_na(year, v2edcentcurrlm.x, regime, diverse) |> 
  dplyr::filter(regime %in% "Autocracy") |> 
  ggplot(aes(x = v2edcentcurrlm.x, y = diverse)) + 
  geom_smooth(method = "lm", se = F, color = futurevisions::futurevisions("mars")[1]) + 
  geom_point(shape = 21, size = 1, fill = futurevisions::futurevisions("mars")[1]) +
  labs(x = "Centralized curriculum", 
       y = "Diversity of patents") +
  facet_wrap(~iso3)
```

#### Logged number of patents and centralized textbook approval (`v2edcenttxbooks`)

```{r}
#| eval: true
#| code-fold: true
#| code-summary: "Show the code"
#| message: false
#| warning: false
#| error: false
#| layout-ncol: 1
#| fig-cap: "Bivariate relationship between logged number of patents and centralized textbook approval by countries and regimes"
#| fig-subcap: 
#|   - "Democracy"
#|   - "Autocracy"

vdem_patent |> ungroup() |> dplyr::filter(year > "1979") |> 
  drop_na(year, v2edcenttxbooks.x, regime, lnpatent) |> 
  dplyr::filter(regime %in% "Democracy") |> 
  ggplot(aes(x = v2edcenttxbooks.x, y = lnpatent)) + 
  geom_smooth(method = "lm", se = F, color = futurevisions::futurevisions("mars")[3]) + 
  geom_point(shape = 21, size = 1, fill = futurevisions::futurevisions("mars")[3]) +
  labs(x = "Centralized textbook approval", 
       y = "Logged number of patents") +
  facet_wrap(~iso3)

vdem_patent |> ungroup() |> dplyr::filter(year > "1979") |> 
  drop_na(year, v2edcenttxbooks.x, regime, lnpatent) |> 
  dplyr::filter(regime %in% "Autocracy") |> 
  ggplot(aes(x = v2edcenttxbooks.x, y = lnpatent)) + 
  geom_smooth(method = "lm", se = F, color = futurevisions::futurevisions("mars")[1]) + 
  geom_point(shape = 21, size = 1, fill = futurevisions::futurevisions("mars")[1]) +
  labs(x = "Centralized textbook approval", 
       y = "Logged number of patents") +
  facet_wrap(~iso3)
```

#### Diversity of patents and centralized textbook approval (`v2edcenttxbooks`)

```{r}
#| eval: true
#| code-fold: true
#| code-summary: "Show the code"
#| message: false
#| warning: false
#| error: false
#| layout-ncol: 1
#| fig-cap: "Bivariate relationship between diversity of patents and centralized textbook approval by countries and regimes"
#| fig-subcap: 
#|   - "Democracy"
#|   - "Autocracy"

vdem_patent |> ungroup() |> dplyr::filter(year > "1979") |> 
  drop_na(year, v2edcenttxbooks.x, regime, diverse) |> 
  dplyr::filter(regime %in% "Democracy") |> 
  ggplot(aes(x = v2edcenttxbooks.x, y = diverse)) + 
  geom_smooth(method = "lm", se = F, color = futurevisions::futurevisions("mars")[3]) + 
  geom_point(shape = 21, size = 1, fill = futurevisions::futurevisions("mars")[3]) +
  labs(x = "Centralized textbook approval", 
       y = "Diversity of patents") +
  facet_wrap(~iso3)

vdem_patent |> ungroup() |> dplyr::filter(year > "1979") |> 
  drop_na(year, v2edcenttxbooks.x, regime, diverse) |> 
  dplyr::filter(regime %in% "Autocracy") |> 
  ggplot(aes(x = v2edcenttxbooks.x, y = diverse)) + 
  geom_smooth(method = "lm", se = F, color = futurevisions::futurevisions("mars")[1]) + 
  geom_point(shape = 21, size = 1, fill = futurevisions::futurevisions("mars")[1]) +
  labs(x = "Centralized textbook approval", 
       y = "Diversity of patents") +
  facet_wrap(~iso3)
```

## Preliminary Analysis

### Regression models with robust standard errors

```{r}
#| eval: true
#| code-fold: true
#| code-summary: "Show the code"
#| message: false
#| warning: false
#| error: false
#| results: asis
#| tbl-cap: "Centralized curriculum, centralized textbook approval, and number of patents"
lm_robust(
  lnpatent ~ (v2edcentcurrlm.x + v2edcenttxbooks.x + v2xed_ed_poed.x) + 
    e_gdppc + e_pop + 
    v2peprisch + v2pesecsch + v2petersch + v2stfisccap + wdi_fdiin + 
    v2edmath.x +
    iso3 + year,
  data = vdem_patent |> dplyr::filter(regime == "Democracy"),
  se = "stata") -> number_demo

lm_robust(
  lnpatent ~ (v2edcentcurrlm.x + v2edcenttxbooks.x + v2xed_ed_poed.x) + 
    e_gdppc + e_pop + 
    v2peprisch + v2pesecsch + v2petersch + v2stfisccap + wdi_fdiin + 
    v2edmath.x +
    iso3 + year,
  data = vdem_patent |> dplyr::filter(regime == "Autocracy"),
  se = "stata") -> number_auto

lm_robust(
  lnpatent ~ regime*(v2edcentcurrlm.x + v2edcenttxbooks.x) + v2xed_ed_poed.x + 
    e_gdppc + e_pop + 
    v2peprisch + v2pesecsch + v2petersch + v2stfisccap + wdi_fdiin + 
    v2edmath.x +
    iso3 + year,
  data = vdem_patent,
  se = "stata") -> number_full

lm_robust(
  diverse ~ v2edcentcurrlm.x + v2edcenttxbooks.x + v2xed_ed_poed.x + 
    e_gdppc + e_pop + 
    v2peprisch + v2pesecsch + v2petersch + v2stfisccap + wdi_fdiin + 
    v2edmath.x +
    iso3 + year,
  data = vdem_patent |> dplyr::filter(regime == "Democracy"),
  se = "stata") -> diverse_demo

lm_robust(
  diverse ~ v2edcentcurrlm.x + v2edcenttxbooks.x + v2xed_ed_poed.x + 
    e_gdppc + e_pop + 
    v2peprisch + v2pesecsch + v2petersch + v2stfisccap + wdi_fdiin + 
    v2edmath.x +
    iso3 + year,
  data = vdem_patent |> dplyr::filter(regime == "Autocracy"),
  se = "stata") -> diverse_auto

lm_robust(
  diverse ~ regime*(v2edcentcurrlm.x + v2edcenttxbooks.x) + v2xed_ed_poed.x + 
    e_gdppc + e_pop + 
    v2peprisch + v2pesecsch + v2petersch + v2stfisccap + wdi_fdiin + 
    v2edmath.x +
    iso3 + year,
  data = vdem_patent,
  se = "stata") -> diverse_full


coefnames <- c("(Constant)", "Centralized curriculum", 
               "Centralized textbook approval", 
               "Political education effort in education", "GDPpc",
               "Population", "Primary school enrolment", 
               "Secondary school enrolment", "Tertiary school enrolment",
               "State fiscal capacity",
               "Foreign Direct Investment Inflow",
               "Math and Science", "Democracy",
               "Democracy$\\times$Centralized curriculum",
               "Democracy$\\times$Centralized textbook approval")
texreg::htmlreg(list(number_demo, number_auto, number_full, 
                       diverse_demo, diverse_auto, diverse_full),
                  omit.coef = "as.factor|year|iso3", include.ci = F, digits = 3,
                  custom.model.names = c("M1: Number Democracy",
                                         "M2: Number Autocracy",
                                         "M3: Number Full",
                                         "M4: Diverse Democracy",
                                         "M5: Diverse Autocracy",
                                         "M6: Diverse Full"),
                  reorder.coef = c(2, 3, 4, 13, 14, 15, 12, 5, 6, 7, 8, 9, 10, 11, 1),
                  custom.coef.names = coefnames,
                  custom.gof.rows = list(
                    "Country-fixed" = c("Yes", "Yes", "Yes", "Yes", "Yes", "Yes"),
                    "Year-fixed" = c("Yes", "Yes", "Yes", "Yes", "Yes", "Yes")
                  ))
```

### Marginal effects

```{r}
#| eval: true
#| code-fold: true
#| code-summary: "Show the code"
#| message: false
#| warning: false
#| error: false
number_full |> 
  marginaleffects::plot_predictions(condition = list("v2edcenttxbooks.x", "regime"))  + 
  labs(x = "\nCentralized textbook approval", y = "Ln(Numbers of Patent + 1)\n") +
  #scale_x_continuous(breaks = c(seq(0, 1, 0.25))) +
  theme_bw()


diverse_full |> 
  marginaleffects::plot_predictions(condition = list("v2edcentcurrlm.x", "regime"))  + 
  labs(x = "\nCentralized curriculum", y = "Diversity of patent\n") +
  #scale_x_continuous(breaks = c(seq(0, 1, 0.25))) +
  theme_bw()
```
